# .github/workflows/auto-release.yml
name: Auto Release

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linter
        run: npm run lint || echo "No lint script"

      - name: Build package
        run: npm run build

      - name: Check package
        run: npm pack --dry-run

  auto-release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Determine version bump
        id: bump
        run: |
          # Get the last commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"

          # Determine bump type based on commit message
          if echo "$COMMIT_MSG" | grep -i "BREAKING CHANGE\|major:"; then
            echo "bump=major" >> $GITHUB_OUTPUT
            echo "Detected MAJOR version bump"
          elif echo "$COMMIT_MSG" | grep -i "feat:\|feature:\|minor:"; then
            echo "bump=minor" >> $GITHUB_OUTPUT
            echo "Detected MINOR version bump"
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
            echo "Detected PATCH version bump"
          fi

      - name: Bump version
        run: |
          npm version ${{ steps.bump.outputs.bump }} -m "chore: release v%s [skip ci]"
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Generate changelog
        run: |
          # Create a simple changelog entry
          echo "## v${{ env.VERSION }} ($(date +'%Y-%m-%d'))" > release-notes.md
          echo "" >> release-notes.md
          echo "### Changes" >> release-notes.md
          git log --oneline --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> release-notes.md || echo "- Initial release" >> release-notes.md
          echo "" >> release-notes.md
          echo "### Installation" >> release-notes.md
          echo "\`\`\`bash" >> release-notes.md
          echo "npm install --save-dev vite-plugin-component-debugger@${{ env.VERSION }}" >> release-notes.md
          echo "\`\`\`" >> release-notes.md

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body_path: release-notes.md
          draft: false
          prerelease: false

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version bump
        run: |
          git push origin main
          git push origin --tags

      - name: Success notification
        run: |
          echo "🎉 Successfully released v${{ env.VERSION }}"
          echo "📦 NPM: https://www.npmjs.com/package/vite-plugin-component-debugger"
          echo "🏷️ GitHub: ${{ steps.create_release.outputs.html_url }}"