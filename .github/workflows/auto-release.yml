# .github/workflows/auto-release.yml
name: Auto Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Run linter
        run: pnpm run lint || echo "No lint script"

      - name: Build package
        run: pnpm run build

      - name: Check package
        run: pnpm pack && rm -f *.tgz

  auto-release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm run build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Check if release is needed
        id: check_release
        run: |
          # Get the version from the merged package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Version in package.json is $CURRENT_VERSION"

          # Check if a git tag for this version already exists
          if git rev-parse "v$CURRENT_VERSION" >/dev/null 2>&1; then
            echo "Tag v$CURRENT_VERSION already exists. Skipping release."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "Tag v$CURRENT_VERSION does not exist. Proceeding with release."
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          fi

      - name: Create and push tag
        if: steps.check_release.outputs.skip == 'false'
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}
          echo "Created and pushed tag v${{ env.VERSION }}"

      - name: Generate changelog
        if: steps.check_release.outputs.skip == 'false'
        run: |
          # Create a simple changelog entry
          echo "## v${{ env.VERSION }} ($(date +'%Y-%m-%d'))" > release-notes.md
          echo "" >> release-notes.md
          echo "### Changes" >> release-notes.md
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)
          git log --oneline --pretty=format:"- %s" ${LAST_TAG}..HEAD >> release-notes.md
          echo "" >> release-notes.md
          echo "### Installation" >> release-notes.md
          echo "\`\`\`bash" >> release-notes.md
          echo "npm install --save-dev vite-plugin-component-debugger@${{ env.VERSION }}" >> release-notes.md
          echo "\`\`\`" >> release-notes.md

      - name: Create GitHub Release
        if: steps.check_release.outputs.skip == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body_path: release-notes.md
          draft: false
          prerelease: false

      - name: Publish to NPM
        if: steps.check_release.outputs.skip == 'false'
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Success notification
        if: steps.check_release.outputs.skip == 'false'
        run: |
          echo "🎉 Successfully released v${{ env.VERSION }}"
          echo "📦 NPM: https://www.npmjs.com/package/vite-plugin-component-debugger"
          echo "🏷️ GitHub: ${{ steps.create_release.outputs.html_url }}"
